{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Guide to OSCP I am writing this guide to cover all OSCP topics as well as other infosec knowledge in details, I will also provide a cheat-sheet in each section so that you can use the commands directly once you understand the topics/tools. But I think to become a good pentester you should know how things work. Pentesting is a very wide field, like if you are interested in webapp pentesting then you should know how application interacts with databases, basics of databses, webapp languages. Similarly if you want to become system/platform(OS) pentester, you should know how to setup the OS, how to do system configuration, and what people can miss when they do configuration. This can guide you to think in the direction of finding vulnerability. If you want to go into network pentesting, you should know TC/IP layer, OSI layer, network configuration and basic knowledge of how internet and firewall works. Always remember, information security is a journey, there are emough amount of things to learn and they keep increasing as the technology changes, so only thing that you need to conquer this journey is patience and curiosity. When I started OSCP, I didn't even know about nmap, so it is not that before attempting OSCP you have to learn something. Only prerequisite is: - Basic understanding of OS, and TCP/IP protocol - Also, it would be great if you are familiar with basic commands in linux and windows. - Able to read and understand code written in C, python and bash First phase of pentesting is the \"Information Gathering\" phase, in this the pentester searches for publicly available information about the client and identifies potential ways to connect to its systems. After this, the tester uses this information to determine the value of each finding and the impact to the client if the finding permitted an attacker to break into a system. Second phase is \"Vulnerability Analysis\", this is the phase where you attempt to discover vulnerability in the system, system can be a webapp, any application running on particular OS or the OS itself. Once you find that there is a vulnerability, then you need to find a way to exploit it. Next comes \"Exploitation Phase\" depends on the type/kind of vulnerability and a pentester need to craft a exploit using his/her skill to exploit the software. Fourth phase is \"Post-Exploitation\" phase, where the result of the exploitation is used to find additional information, sensitive data(like password files, password stored in browser, other private files ), access to other systems resources. Then comes the last phase called \"Reporting\" phase, in this, the pentester summarizes the findings, including steps of exploitation and problem with the software which allows attacker to exploit it. I am covering all these phases including some other resource that will help you in OSCP as well as pentesting journey. Content Setting Up Kali Linux","title":"Home"},{"location":"#guide-to-oscp","text":"I am writing this guide to cover all OSCP topics as well as other infosec knowledge in details, I will also provide a cheat-sheet in each section so that you can use the commands directly once you understand the topics/tools. But I think to become a good pentester you should know how things work. Pentesting is a very wide field, like if you are interested in webapp pentesting then you should know how application interacts with databases, basics of databses, webapp languages. Similarly if you want to become system/platform(OS) pentester, you should know how to setup the OS, how to do system configuration, and what people can miss when they do configuration. This can guide you to think in the direction of finding vulnerability. If you want to go into network pentesting, you should know TC/IP layer, OSI layer, network configuration and basic knowledge of how internet and firewall works. Always remember, information security is a journey, there are emough amount of things to learn and they keep increasing as the technology changes, so only thing that you need to conquer this journey is patience and curiosity. When I started OSCP, I didn't even know about nmap, so it is not that before attempting OSCP you have to learn something. Only prerequisite is: - Basic understanding of OS, and TCP/IP protocol - Also, it would be great if you are familiar with basic commands in linux and windows. - Able to read and understand code written in C, python and bash First phase of pentesting is the \"Information Gathering\" phase, in this the pentester searches for publicly available information about the client and identifies potential ways to connect to its systems. After this, the tester uses this information to determine the value of each finding and the impact to the client if the finding permitted an attacker to break into a system. Second phase is \"Vulnerability Analysis\", this is the phase where you attempt to discover vulnerability in the system, system can be a webapp, any application running on particular OS or the OS itself. Once you find that there is a vulnerability, then you need to find a way to exploit it. Next comes \"Exploitation Phase\" depends on the type/kind of vulnerability and a pentester need to craft a exploit using his/her skill to exploit the software. Fourth phase is \"Post-Exploitation\" phase, where the result of the exploitation is used to find additional information, sensitive data(like password files, password stored in browser, other private files ), access to other systems resources. Then comes the last phase called \"Reporting\" phase, in this, the pentester summarizes the findings, including steps of exploitation and problem with the software which allows attacker to exploit it. I am covering all these phases including some other resource that will help you in OSCP as well as pentesting journey.","title":"Guide to OSCP"},{"location":"#content","text":"Setting Up Kali Linux","title":"Content"},{"location":"Virtual_Lab_Setup/","text":"For running tools required for pentesting, you need to setup your own linux. There are many linux flavour available in market, like Ubuntu, RedHat, OpenSuse but Kali is one of the best for people in infosec as it contains all the tools preinstalled which are required by any pentester. It is always better to install Kali as a guest OS/virtual OS, on top of existing OS like windows, reason is, since kali OS is going to be the source of all attacks what you are going to do against other target(other PCs/Websites), even if your own system got hacked by unethical people it will only effect the vmware OS only, not the original OS on top of which you are running your kali. So, before installing Kali OS, you need to install hypervisor software, there are 2 well supported hypervisor available in market, VMWare and VirtualBox. I personally like working with Vmware, so download and install Vmware from this link - https://www.vmware.com/products/workstation-player.html Once Vmware got installed, download zip file of kali linux from this link - https://www.offensive-security.com/kali-linux-vm-vmware-virtualbox-image-download/ or if you applied for OSCP, you will get a download link of kali from OSCP in a mail. Only difference between these 2 kali version is that the OSCP kali linux contains some extra preinstalled tools which might be needed during OSCP. Unzip above file using 7z software, you can download 7z from here, if you don't have it already: https://www.7-zip.org/download.html Go to the extracted folder and open file having type as Vmware virtual machine configuration(Kali-Linux-2019.1-vm-amd64). Once it get opened it will show prompt like below: Click on \"I Copied It\". Once it boots, type Username: root and Passwords: toor There might be chances that you need to change the network adapter settings. VMware offers 3 options for virtual network connections: bridged, NAT, and host only. You should choose the bridged option, but below is the info on each: - Bridged network: It connects the virtual machine directly to the local network using the same connection as the host system. As far as the local network is concerned, our virtual machine is just another node on the network with its own IP address. - NAT(Network Address Translation): It sets up a private network on the host machine. The private network translates outgoing traffic from the virtual machine to the local network. On the local network, traffic from the virtual machine will appear to come from the host machine\u2019s IP address. - Host-only network: It limits the virtual machine to a local private network on the host. The virtual machine will be able to communicate with other virtual machines in the host-only network as well as the host machine itself, but it will not be able to send or receive any traffic with the local network or the Internet. Chose Bridge Network Connection: ''' Go to player- Machine - Virtual Machine Settings - Bridged option. ''' To learn Linux : https://linuxjourney.com/ https://ryanstutorials.net/linuxtutorial/ if you want to learn kali linux: you can skip wireless part from this video: https://www.youtube.com/watch?v=0uvWRwLs5Zo kali linux book: https://kali.training/downloads/Kali-Linux-Revealed-1st-edition.pdf If you want to understand any command, you can put the command in below website to get help about it: https://www.explainshell.com/","title":"Setting up Kali Linux"},{"location":"nahamsec/recon_session_1/","text":"Recon Session 1 on Yahoo Check for In-Scope and Out-of -Scope items on Hackerone.com Search on crt.sh --- %.yahoo.com -- you can put % wildcard anywhere in search like %api.yahoo.com -- %internal%.yahoo.com Search on certspotter --- yahoo.com Check the github code in recon_profile repo of nahamsec for cerspotter bash 1 line command, you can set it in your .bash_profile and then run it just by calling function name # certspotter yahoo.com -- output of this will not give all the subdomains of yahoo Check for first level subdomain example: ops.yahoo.com -- juicy + potentiall internal ne1.yahoo.com -- corporate/internal domain xobni.yahoo.com -- next potential internal Do These First corp.yahoo.com bf1.yahoo.com urs.yahoo.com adx.yahoo.com Do later gq1.yahoo.com ir2/yahoo.com sg3.yahoo.com tp2.yahoo.com udb.yahoo.com -- api enpoints payment.yahoo.com --- associated with internalapi * these are all interesting as these belong to corporate domains. Check for how many subdomains are alive/online ? certspotter corp.yahoo.com | httprobe httprobe os from tomnonnon github Make directory for target and all subdomains and all alive domains: # mkdir yahoo.com # cd yahoo.com # touch all.txt # touch alive.txt We are picking up api endpoints because these give really cool interesting stuff, internals and corporate because it is internal to yahoo and we want to know if we have access to it from outside. # certspotter yahoo.com | grep dev | httprobe # certspotter assistant.yahoo.com | grep dev | httprobe open a page from here on browser to check the response Note: Error 404 does not mean that we don't have anything there You can have a simple for loop to run other commands example: for i in certspotter assistant.yahoo.com | httprobe ; do curl $i/phpinfo.php; done Template for i in certspotter assistant.yahoo.com | httprobe ; do ; done # crtsh ops.yahoo.com all.txt # crtsh corp.yahoo.com all.txt Process is to able to find interesting things and how infrastructure of a website is built. Check for xobni in cr.sh like %xobni%.yahoo.com # crtsh xobni.yahoo.com all.txt # nano ~/.bash_profile getcount(){ cat all.txt | wc -l } # source ~/.bash_profile # cat all.txt | httprobe Put some more wildcard in crt.sh website ---- %25.%25.%25.%25.%25.yahoo.com Got some interesting subdomains: splunk.yahoo.com test-paranoids.yahoo.com manhattan.tp2.yahoo.com # crtsh test-paranoids.yahoo.com | httprobe ---- gave no result, so offline for us and of no use # crtsh bf1.yahoo.com | wc -l -- 509 # crtsh bf1.yahoo.com Check on crt.sh website for %.bf1.yahoo.com corp.bf1.yahoo.com mail.bf1.yahoo.com infra.bf1.yahoo.com vip.bf1.yahoo.com openstack.bf1.yahoo.com cs.bf1.yahoo.com flurry.bf1.yahoo.com prod.bf1.yahoo.com azurite.bf1.yahoo.com omega.bf1.yahoo.com ideas %uat% run a curl on adx.bf1.yahoo.com/pguix Google Dorks site:bf1.yahoo.com -flickr -omega -adx \"bf1.yahoo.com\" github.com # vi bf1 -- dump all bf1 subdomains here for i in `cmd`; do crtsh $i ; done Run crtsh on all the above bf1 domain Get some more interesting domains. iextract.bf1.yahoo.com diy.bf1.yahoo.com manhatan.bf1.yahoo.com netops.ne1.yahoo.com hk.%.yahoo.com advertising.yahoo.com creative.yahoo.com Check for Some interesting subdomains containing these keywords admin jenkins stage test dev devops staff db qa internal Now find all the alive domains # cat all.txt | httprobe alive.txt Check http probe on all ports except port 80 and 443 # cat all.txt | httprove -s -p https:8443 Take Screenshots now Install phantomJS # python webscreenshot.py \\ input_dir> -o \\ out_dir> -w 20 -m -a \"X-FORWARDED-FOR:127.0.0.1\"","title":"NahamSec Recon Session 1 Notes"},{"location":"nahamsec/recon_session_1/#recon-session-1-on-yahoo","text":"","title":"Recon Session 1 on Yahoo"},{"location":"nahamsec/recon_session_1/#check-for-in-scope-and-out-of-scope-items-on-hackeronecom","text":"","title":"Check for In-Scope and Out-of -Scope items on Hackerone.com"},{"location":"nahamsec/recon_session_1/#search-on-crtsh-yahoocom","text":"-- you can put % wildcard anywhere in search like %api.yahoo.com -- %internal%.yahoo.com","title":"Search on crt.sh    ---&gt; %.yahoo.com"},{"location":"nahamsec/recon_session_1/#search-on-certspotter-yahoocom","text":"Check the github code in recon_profile repo of nahamsec for cerspotter bash 1 line command, you can set it in your .bash_profile and then run it just by calling function name # certspotter yahoo.com -- output of this will not give all the subdomains of yahoo","title":"Search on certspotter   ---&gt; yahoo.com"},{"location":"nahamsec/recon_session_1/#check-for-first-level-subdomain-example","text":"ops.yahoo.com -- juicy + potentiall internal ne1.yahoo.com -- corporate/internal domain xobni.yahoo.com -- next potential internal Do These First corp.yahoo.com bf1.yahoo.com urs.yahoo.com adx.yahoo.com Do later gq1.yahoo.com ir2/yahoo.com sg3.yahoo.com tp2.yahoo.com udb.yahoo.com -- api enpoints payment.yahoo.com --- associated with internalapi * these are all interesting as these belong to corporate domains.","title":"Check for first level subdomain example:"},{"location":"nahamsec/recon_session_1/#check-for-how-many-subdomains-are-aliveonline","text":"certspotter corp.yahoo.com | httprobe httprobe os from tomnonnon github","title":"Check for how many subdomains are alive/online ?"},{"location":"nahamsec/recon_session_1/#make-directory-for-target-and-all-subdomains-and-all-alive-domains","text":"# mkdir yahoo.com # cd yahoo.com # touch all.txt # touch alive.txt We are picking up api endpoints because these give really cool interesting stuff, internals and corporate because it is internal to yahoo and we want to know if we have access to it from outside. # certspotter yahoo.com | grep dev | httprobe # certspotter assistant.yahoo.com | grep dev | httprobe open a page from here on browser to check the response Note: Error 404 does not mean that we don't have anything there","title":"Make directory for target and all subdomains and all alive domains:"},{"location":"nahamsec/recon_session_1/#you-can-have-a-simple-for-loop-to-run-other-commands","text":"example: for i in certspotter assistant.yahoo.com | httprobe ; do curl $i/phpinfo.php; done Template for i in certspotter assistant.yahoo.com | httprobe ; do ; done # crtsh ops.yahoo.com all.txt # crtsh corp.yahoo.com all.txt Process is to able to find interesting things and how infrastructure of a website is built. Check for xobni in cr.sh like %xobni%.yahoo.com # crtsh xobni.yahoo.com all.txt # nano ~/.bash_profile getcount(){ cat all.txt | wc -l } # source ~/.bash_profile # cat all.txt | httprobe Put some more wildcard in crt.sh website ---- %25.%25.%25.%25.%25.yahoo.com Got some interesting subdomains: splunk.yahoo.com test-paranoids.yahoo.com manhattan.tp2.yahoo.com # crtsh test-paranoids.yahoo.com | httprobe ---- gave no result, so offline for us and of no use # crtsh bf1.yahoo.com | wc -l -- 509 # crtsh bf1.yahoo.com","title":"You can have a simple for loop to run other commands"},{"location":"nahamsec/recon_session_1/#check-on-crtsh-website-for-bf1yahoocom","text":"corp.bf1.yahoo.com mail.bf1.yahoo.com infra.bf1.yahoo.com vip.bf1.yahoo.com openstack.bf1.yahoo.com cs.bf1.yahoo.com flurry.bf1.yahoo.com prod.bf1.yahoo.com azurite.bf1.yahoo.com omega.bf1.yahoo.com ideas %uat% run a curl on adx.bf1.yahoo.com/pguix","title":"Check on crt.sh website for %.bf1.yahoo.com"},{"location":"nahamsec/recon_session_1/#google-dorks","text":"site:bf1.yahoo.com -flickr -omega -adx \"bf1.yahoo.com\" github.com # vi bf1 -- dump all bf1 subdomains here for i in `cmd`; do crtsh $i ; done Run crtsh on all the above bf1 domain Get some more interesting domains. iextract.bf1.yahoo.com diy.bf1.yahoo.com manhatan.bf1.yahoo.com netops.ne1.yahoo.com hk.%.yahoo.com advertising.yahoo.com creative.yahoo.com","title":"Google Dorks"},{"location":"nahamsec/recon_session_1/#check-for-some-interesting-subdomains-containing-these-keywords","text":"admin jenkins stage test dev devops staff db qa internal","title":"Check for Some interesting subdomains containing these keywords"},{"location":"nahamsec/recon_session_1/#now-find-all-the-alive-domains","text":"# cat all.txt | httprobe alive.txt","title":"Now find all the alive domains"},{"location":"nahamsec/recon_session_1/#check-http-probe-on-all-ports-except-port-80-and-443","text":"# cat all.txt | httprove -s -p https:8443","title":"Check http probe on all ports except port 80 and 443"},{"location":"nahamsec/recon_session_1/#take-screenshots-now","text":"","title":"Take Screenshots now"},{"location":"nahamsec/recon_session_1/#install-phantomjs","text":"# python webscreenshot.py \\ input_dir> -o \\ out_dir> -w 20 -m -a \"X-FORWARDED-FOR:127.0.0.1\"","title":"Install phantomJS"}]}